// 4.16.1 0xa13de364
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_bgcenter[]; // BITMAP_BGCENTER_ID = 0, Size: 480x272 pixels
extern const unsigned char image_bgleft[]; // BITMAP_BGLEFT_ID = 1, Size: 480x272 pixels
extern const unsigned char image_bgright[]; // BITMAP_BGRIGHT_ID = 2, Size: 480x272 pixels
extern const unsigned char image_blue_pageindicator_dot_indicator_small_highlight[]; // BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID = 3, Size: 15x15 pixels
extern const unsigned char image_blue_pageindicator_dot_indicator_small_normal[]; // BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID = 4, Size: 15x15 pixels
extern const unsigned char image_cloud[]; // BITMAP_CLOUD_ID = 5, Size: 115x81 pixels
extern const unsigned char image_drizzle[]; // BITMAP_DRIZZLE_ID = 6, Size: 148x115 pixels
extern const unsigned char image_full_sun[]; // BITMAP_FULL_SUN_ID = 7, Size: 92x90 pixels
extern const unsigned char image_haze[]; // BITMAP_HAZE_ID = 8, Size: 121x95 pixels
extern const unsigned char image_humidity[]; // BITMAP_HUMIDITY_ID = 9, Size: 154x154 pixels
extern const unsigned char image_owm_temp[]; // BITMAP_OWM_TEMP_ID = 10, Size: 318x821 pixels
extern const unsigned char image_pageindicator[]; // BITMAP_PAGEINDICATOR_ID = 11, Size: 15x15 pixels
extern const unsigned char image_pageindicator_highlight[]; // BITMAP_PAGEINDICATOR_HIGHLIGHT_ID = 12, Size: 15x15 pixels
extern const unsigned char image_pressure2[]; // BITMAP_PRESSURE2_ID = 13, Size: 225x225 pixels
extern const unsigned char image_rain[]; // BITMAP_RAIN_ID = 14, Size: 111x103 pixels
extern const unsigned char image_rain_thunder[]; // BITMAP_RAIN_THUNDER_ID = 15, Size: 109x108 pixels
extern const unsigned char image_snow[]; // BITMAP_SNOW_ID = 16, Size: 110x88 pixels
extern const unsigned char image_sun_cloud[]; // BITMAP_SUN_CLOUD_ID = 17, Size: 147x121 pixels
extern const unsigned char image_sun_cloud_haze[]; // BITMAP_SUN_CLOUD_HAZE_ID = 18, Size: 160x115 pixels
extern const unsigned char image_sun_rain[]; // BITMAP_SUN_RAIN_ID = 19, Size: 138x130 pixels
extern const unsigned char image_sun_rain_thunder[]; // BITMAP_SUN_RAIN_THUNDER_ID = 20, Size: 137x150 pixels
extern const unsigned char image_temperature_icon[]; // BITMAP_TEMPERATURE_ICON_ID = 21, Size: 256x256 pixels
extern const unsigned char image_thunder[]; // BITMAP_THUNDER_ID = 22, Size: 112x104 pixels
extern const unsigned char image_wind_speed[]; // BITMAP_WIND_SPEED_ID = 23, Size: 238x170 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_bgcenter, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_bgleft, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_bgright, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_blue_pageindicator_dot_indicator_small_highlight, 0, 15, 15, 3, 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_pageindicator_dot_indicator_small_normal, 0, 15, 15, 3, 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cloud, 0, 115, 81, 17, 32, 77, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 33, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_drizzle, 0, 148, 115, 16, 35, 89, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_full_sun, 0, 92, 90, 26, 25, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 41, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_haze, 0, 121, 95, 26, 27, 41, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 41, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_humidity, 0, 154, 154, 39, 49, 76, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 90, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_owm_temp, 0, 318, 821, 56, 84, 206, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 699, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pageindicator, 0, 15, 15, 3, 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pageindicator_highlight, 0, 15, 15, 3, 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pressure2, 0, 225, 225, 214, 17, 5, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 185, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_rain, 0, 111, 103, 16, 31, 75, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 34, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_rain_thunder, 0, 109, 108, 11, 34, 83, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 30, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_snow, 0, 110, 88, 13, 32, 81, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 31, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_sun_cloud, 0, 147, 121, 19, 68, 88, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 40, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_sun_cloud_haze, 0, 160, 115, 38, 39, 59, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 51, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_sun_rain, 0, 138, 130, 40, 41, 63, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_sun_rain_thunder, 0, 137, 150, 38, 34, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 70, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_temperature_icon, 0, 256, 256, 123, 37, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 140, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_thunder, 0, 112, 104, 14, 31, 80, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 30, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_wind_speed, 0, 238, 170, 61, 78, 111, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 46, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
