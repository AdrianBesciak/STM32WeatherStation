/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    swipeContainer1.setXY(0, 0);
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID), touchgfx::Bitmap(BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID));
    swipeContainer1.setPageIndicatorXY(218, 251);
    swipeContainer1.setSwipeCutoff(50);
    swipeContainer1.setEndSwipeElasticWidth(0);

    leftScreen.setWidth(480);
    leftScreen.setHeight(272);

    bgLeft.setXY(0, 0);
    bgLeft.setBitmap(touchgfx::Bitmap(BITMAP_BGLEFT_ID));
    leftScreen.add(bgLeft);

    cloud.setXY(348, 44);
    cloud.setVisible(false);
    cloud.setBitmap(touchgfx::Bitmap(BITMAP_CLOUD_ID));
    leftScreen.add(cloud);

    drizzle.setXY(324, 33);
    drizzle.setVisible(false);
    drizzle.setBitmap(touchgfx::Bitmap(BITMAP_DRIZZLE_ID));
    leftScreen.add(drizzle);

    full_sun.setXY(363, 22);
    full_sun.setVisible(false);
    full_sun.setBitmap(touchgfx::Bitmap(BITMAP_FULL_SUN_ID));
    leftScreen.add(full_sun);

    haze.setXY(344, 26);
    haze.setVisible(false);
    haze.setBitmap(touchgfx::Bitmap(BITMAP_HAZE_ID));
    leftScreen.add(haze);

    rain.setXY(350, 35);
    rain.setVisible(false);
    rain.setBitmap(touchgfx::Bitmap(BITMAP_RAIN_ID));
    leftScreen.add(rain);

    rain_thunder.setXY(370, 0);
    rain_thunder.setVisible(false);
    rain_thunder.setBitmap(touchgfx::Bitmap(BITMAP_RAIN_THUNDER_ID));
    leftScreen.add(rain_thunder);

    snow.setXY(352, 31);
    snow.setVisible(false);
    snow.setBitmap(touchgfx::Bitmap(BITMAP_SNOW_ID));
    leftScreen.add(snow);

    sun_cloud.setXY(333, 24);
    sun_cloud.setVisible(false);
    sun_cloud.setBitmap(touchgfx::Bitmap(BITMAP_SUN_CLOUD_ID));
    leftScreen.add(sun_cloud);

    sun_cloud_haze.setXY(320, 25);
    sun_cloud_haze.setVisible(false);
    sun_cloud_haze.setBitmap(touchgfx::Bitmap(BITMAP_SUN_CLOUD_HAZE_ID));
    leftScreen.add(sun_cloud_haze);

    sun_rain.setXY(336, 15);
    sun_rain.setVisible(false);
    sun_rain.setBitmap(touchgfx::Bitmap(BITMAP_SUN_RAIN_ID));
    leftScreen.add(sun_rain);

    sun_rain_thunder.setXY(338, 5);
    sun_rain_thunder.setVisible(false);
    sun_rain_thunder.setBitmap(touchgfx::Bitmap(BITMAP_SUN_RAIN_THUNDER_ID));
    leftScreen.add(sun_rain_thunder);

    thunder.setXY(350, 30);
    thunder.setVisible(false);
    thunder.setBitmap(touchgfx::Bitmap(BITMAP_THUNDER_ID));
    leftScreen.add(thunder);

    owm_temp.setBitmap(touchgfx::Bitmap(BITMAP_OWM_TEMP_ID));
    owm_temp.setPosition(14, 0, 33, 81);
    owm_temp.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    leftScreen.add(owm_temp);

    currentOWMtemp.setPosition(188, 12, 113, 28);
    currentOWMtemp.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    currentOWMtemp.setLinespacing(0);
    currentOWMtempBuffer[0] = 0;
    currentOWMtemp.setWildcard(currentOWMtempBuffer);
    currentOWMtemp.setTypedText(touchgfx::TypedText(T_TEMPOWM));
    leftScreen.add(currentOWMtemp);

    currentOWMfeels.setPosition(188, 46, 113, 26);
    currentOWMfeels.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    currentOWMfeels.setLinespacing(0);
    currentOWMfeelsBuffer[0] = 0;
    currentOWMfeels.setWildcard(currentOWMfeelsBuffer);
    currentOWMfeels.setTypedText(touchgfx::TypedText(T_TEMPOWM));
    leftScreen.add(currentOWMfeels);

    current_text_desc.setPosition(51, 12, 128, 28);
    current_text_desc.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    current_text_desc.setLinespacing(0);
    current_text_desc.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
    leftScreen.add(current_text_desc);

    current_text_desc_1.setPosition(51, 46, 128, 26);
    current_text_desc_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    current_text_desc_1.setLinespacing(0);
    current_text_desc_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));
    leftScreen.add(current_text_desc_1);

    hum.setBitmap(touchgfx::Bitmap(BITMAP_HUMIDITY_ID));
    hum.setPosition(8, 86, 51, 52);
    hum.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    leftScreen.add(hum);

    humidityText.setPosition(66, 97, 118, 28);
    humidityText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    humidityText.setLinespacing(0);
    humidityTextBuffer[0] = 0;
    humidityText.setWildcard(humidityTextBuffer);
    humidityText.setTypedText(touchgfx::TypedText(T_TEMPOWM));
    leftScreen.add(humidityText);

    pressureimg.setBitmap(touchgfx::Bitmap(BITMAP_PRESSURE2_ID));
    pressureimg.setPosition(8, 145, 51, 48);
    pressureimg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    leftScreen.add(pressureimg);

    pressureText.setPosition(65, 157, 118, 27);
    pressureText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    pressureText.setLinespacing(0);
    pressureTextBuffer[0] = 0;
    pressureText.setWildcard(pressureTextBuffer);
    pressureText.setTypedText(touchgfx::TypedText(T_TEMPOWM));
    leftScreen.add(pressureText);

    wind_speed.setBitmap(touchgfx::Bitmap(BITMAP_WIND_SPEED_ID));
    wind_speed.setPosition(2, 199, 57, 52);
    wind_speed.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    leftScreen.add(wind_speed);

    windSpeed.setPosition(65, 212, 118, 27);
    windSpeed.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    windSpeed.setLinespacing(0);
    windSpeedBuffer[0] = 0;
    windSpeed.setWildcard(windSpeedBuffer);
    windSpeed.setTypedText(touchgfx::TypedText(T_TEMPOWM));
    leftScreen.add(windSpeed);

    citynametext.setPosition(261, 153, 211, 33);
    citynametext.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    citynametext.setLinespacing(0);
    citynametextBuffer[0] = 0;
    citynametext.setWildcard(citynametextBuffer);
    citynametext.setTypedText(touchgfx::TypedText(T_TEMPINSIDEWILDCARD));
    leftScreen.add(citynametext);

    desc.setPosition(261, 196, 211, 55);
    desc.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    desc.setLinespacing(0);
    descBuffer[0] = 0;
    desc.setWildcard(descBuffer);
    desc.setTypedText(touchgfx::TypedText(T_WEATHERDESC));
    leftScreen.add(desc);
    swipeContainer1.add(leftScreen);

    centerScreen.setWidth(480);
    centerScreen.setHeight(272);

    bgCenter.setXY(0, 0);
    bgCenter.setBitmap(touchgfx::Bitmap(BITMAP_BGCENTER_ID));
    centerScreen.add(bgCenter);

    cityNameFieldLabel.setPosition(30, 89, 115, 34);
    cityNameFieldLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    cityNameFieldLabel.setLinespacing(0);
    cityNameFieldLabel.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));
    centerScreen.add(cityNameFieldLabel);

    inputButton.setBoxWithBorderPosition(0, 0, 290, 50);
    inputButton.setBorderSize(1);
    inputButton.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(129, 135, 137), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    inputButton.setPosition(148, 81, 290, 50);
    inputButton.setAction(flexButtonCallback);
    centerScreen.add(inputButton);

    inputField.setPosition(157, 93, 273, 30);
    inputField.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    inputField.setLinespacing(0);
    Unicode::snprintf(inputFieldBuffer, INPUTFIELD_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID13).getText());
    inputField.setWildcard(inputFieldBuffer);
    inputField.setTypedText(touchgfx::TypedText(T_WEATHERDESC));
    centerScreen.add(inputField);

    checkWeatherButton.setXY(155, 142);
    checkWeatherButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    checkWeatherButton.setLabelText(touchgfx::TypedText(T_SINGLEUSEID14));
    checkWeatherButton.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    checkWeatherButton.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    checkWeatherButton.setAction(buttonCallback);
    centerScreen.add(checkWeatherButton);
    swipeContainer1.add(centerScreen);

    rightScreen.setWidth(480);
    rightScreen.setHeight(272);

    bgRight.setXY(0, 0);
    bgRight.setBitmap(touchgfx::Bitmap(BITMAP_BGRIGHT_ID));
    rightScreen.add(bgRight);

    temperatureIcon.setBitmap(touchgfx::Bitmap(BITMAP_OWM_TEMP_ID));
    temperatureIcon.setPosition(47, 97, 36, 89);
    temperatureIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    rightScreen.add(temperatureIcon);

    currentTempValue.setPosition(112, 158, 114, 32);
    currentTempValue.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    currentTempValue.setLinespacing(0);
    currentTempValueBuffer[0] = 0;
    currentTempValue.setWildcard(currentTempValueBuffer);
    currentTempValue.setTypedText(touchgfx::TypedText(T_TEMPOWM));
    rightScreen.add(currentTempValue);

    currentTempText.setPosition(99, 96, 141, 61);
    currentTempText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    currentTempText.setLinespacing(0);
    currentTempText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
    rightScreen.add(currentTempText);

    sunrise.setBitmap(touchgfx::Bitmap(BITMAP_SUNRISE_ID));
    sunrise.setPosition(28, 12, 74, 74);
    sunrise.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    rightScreen.add(sunrise);

    sunset.setBitmap(touchgfx::Bitmap(BITMAP_SUNSET_ID));
    sunset.setPosition(261, 12, 74, 74);
    sunset.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    rightScreen.add(sunset);

    sunsetText.setPosition(348, 22, 118, 27);
    sunsetText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    sunsetText.setLinespacing(0);
    sunsetTextBuffer[0] = 0;
    sunsetText.setWildcard(sunsetTextBuffer);
    sunsetText.setTypedText(touchgfx::TypedText(T_TEMPOWM));
    rightScreen.add(sunsetText);

    sunriseText.setPosition(115, 22, 118, 27);
    sunriseText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    sunriseText.setLinespacing(0);
    sunriseTextBuffer[0] = 0;
    sunriseText.setWildcard(sunriseTextBuffer);
    sunriseText.setTypedText(touchgfx::TypedText(T_TEMPOWM));
    rightScreen.add(sunriseText);

    visibilityIcon.setBitmap(touchgfx::Bitmap(BITMAP_VISIBILITY_ID));
    visibilityIcon.setPosition(262, 106, 73, 72);
    visibilityIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    rightScreen.add(visibilityIcon);

    visibilityText.setPosition(348, 123, 118, 27);
    visibilityText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    visibilityText.setLinespacing(0);
    visibilityTextBuffer[0] = 0;
    visibilityText.setWildcard(visibilityTextBuffer);
    visibilityText.setTypedText(touchgfx::TypedText(T_TEMPOWM));
    rightScreen.add(visibilityText);
    swipeContainer1.add(rightScreen);
    swipeContainer1.setSelectedPage(1);

    add(__background);
    add(swipeContainer1);
}

void MainViewBase::setupScreen()
{

    //OnMainScreenUpdate
    //When screen transition begins call virtual function
    //Call on_screen_update
    on_screen_update();

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &checkWeatherButton)
    {
        //GetNewWeather
        //When checkWeatherButton clicked call virtual function
        //Call get_new_weather
        get_new_weather();
    }
}

void MainViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &inputButton)
    {
        //onClickInputField
        //When inputButton clicked change screen to Keyboard
        //Go to Keyboard with screen transition towards South
        application().gotoKeyboardScreenSlideTransitionSouth();
    }
}
